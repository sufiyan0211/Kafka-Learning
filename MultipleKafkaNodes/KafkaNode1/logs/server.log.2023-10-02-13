[2023-10-02 13:13:36,116] INFO Creating topic topic02 with configuration {} and initial partition assignment HashMap(0 -> ArrayBuffer(1, 2), 1 -> ArrayBuffer(2, 1), 2 -> ArrayBuffer(1, 2)) (kafka.zk.AdminZkClient)
[2023-10-02 13:13:36,206] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions Set(topic02-0, topic02-2) (kafka.server.ReplicaFetcherManager)
[2023-10-02 13:13:36,209] INFO [Log partition=topic02-0, dir=/tmp/kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-10-02 13:13:36,209] INFO [Log partition=topic02-0, dir=/tmp/kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 2 ms (kafka.log.Log)
[2023-10-02 13:13:36,210] INFO Created log for partition topic02-0 in /tmp/kafka-logs-1/topic02-0 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2023-10-02 13:13:36,210] INFO [Partition topic02-0 broker=1] No checkpointed highwatermark is found for partition topic02-0 (kafka.cluster.Partition)
[2023-10-02 13:13:36,210] INFO [Partition topic02-0 broker=1] Log loaded for partition topic02-0 with initial high watermark 0 (kafka.cluster.Partition)
[2023-10-02 13:13:36,210] INFO [Partition topic02-0 broker=1] topic02-0 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-10-02 13:13:36,212] INFO [Log partition=topic02-2, dir=/tmp/kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-10-02 13:13:36,213] INFO [Log partition=topic02-2, dir=/tmp/kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 1 ms (kafka.log.Log)
[2023-10-02 13:13:36,213] INFO Created log for partition topic02-2 in /tmp/kafka-logs-1/topic02-2 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2023-10-02 13:13:36,213] INFO [Partition topic02-2 broker=1] No checkpointed highwatermark is found for partition topic02-2 (kafka.cluster.Partition)
[2023-10-02 13:13:36,213] INFO [Partition topic02-2 broker=1] Log loaded for partition topic02-2 with initial high watermark 0 (kafka.cluster.Partition)
[2023-10-02 13:13:36,213] INFO [Partition topic02-2 broker=1] topic02-2 starts at leader epoch 0 from offset 0 with high watermark 0. Previous leader epoch was -1. (kafka.cluster.Partition)
[2023-10-02 13:13:36,216] INFO [Log partition=topic02-1, dir=/tmp/kafka-logs-1] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2023-10-02 13:13:36,217] INFO [Log partition=topic02-1, dir=/tmp/kafka-logs-1] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 1 ms (kafka.log.Log)
[2023-10-02 13:13:36,217] INFO Created log for partition topic02-1 in /tmp/kafka-logs-1/topic02-1 with properties {compression.type -> producer, min.insync.replicas -> 1, message.downconversion.enable -> true, segment.jitter.ms -> 0, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, retention.ms -> 604800000, segment.bytes -> 1073741824, flush.messages -> 9223372036854775807, message.format.version -> 2.5-IV0, max.compaction.lag.ms -> 9223372036854775807, file.delete.delay.ms -> 60000, max.message.bytes -> 1048588, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, preallocate -> false, index.interval.bytes -> 4096, min.cleanable.dirty.ratio -> 0.5, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, segment.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760}. (kafka.log.LogManager)
[2023-10-02 13:13:36,217] INFO [Partition topic02-1 broker=1] No checkpointed highwatermark is found for partition topic02-1 (kafka.cluster.Partition)
[2023-10-02 13:13:36,217] INFO [Partition topic02-1 broker=1] Log loaded for partition topic02-1 with initial high watermark 0 (kafka.cluster.Partition)
[2023-10-02 13:13:36,217] INFO [ReplicaFetcherManager on broker 1] Removed fetcher for partitions HashSet(topic02-1) (kafka.server.ReplicaFetcherManager)
[2023-10-02 13:13:36,226] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Starting (kafka.server.ReplicaFetcherThread)
[2023-10-02 13:13:36,229] INFO [ReplicaFetcherManager on broker 1] Added fetcher to broker 2 for partitions Map(topic02-1 -> (offset=0, leaderEpoch=0)) (kafka.server.ReplicaFetcherManager)
[2023-10-02 13:13:36,230] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Truncating partition topic02-1 to local high watermark 0 (kafka.server.ReplicaFetcherThread)
[2023-10-02 13:13:36,230] INFO [Log partition=topic02-1, dir=/tmp/kafka-logs-1] Truncating to 0 has no effect as the largest offset in the log is -1 (kafka.log.Log)
[2023-10-02 13:13:44,306] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-10-02 13:23:44,317] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-10-02 13:33:44,319] INFO [GroupMetadataManager brokerId=1] Removed 0 expired offsets in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2023-10-02 13:42:16,970] INFO [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error sending fetch request (sessionId=398227541, epoch=2815) to node 2: {}. (org.apache.kafka.clients.FetchSessionHandler)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:108)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-10-02 13:42:17,077] WARN [ReplicaFetcher replicaId=1, leaderId=2, fetcherId=0] Error in response for fetch request (type=FetchRequest, replicaId=1, maxWait=500, minBytes=1, maxBytes=10485760, fetchData={}, isolationLevel=READ_UNCOMMITTED, toForget=, metadata=(sessionId=398227541, epoch=2815), rackId=) (kafka.server.ReplicaFetcherThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.server.ReplicaFetcherBlockingSend.sendRequest(ReplicaFetcherBlockingSend.scala:108)
	at kafka.server.ReplicaFetcherThread.fetchFromLeader(ReplicaFetcherThread.scala:206)
	at kafka.server.AbstractFetcherThread.processFetchRequest(AbstractFetcherThread.scala:300)
	at kafka.server.AbstractFetcherThread.$anonfun$maybeFetch$3(AbstractFetcherThread.scala:135)
	at kafka.server.AbstractFetcherThread.maybeFetch(AbstractFetcherThread.scala:134)
	at kafka.server.AbstractFetcherThread.doWork(AbstractFetcherThread.scala:117)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
